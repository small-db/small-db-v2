###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

"""small-db-v2 is an experimental project for studying of ACID / Distributed ACID"""

# ================================================================================ #
# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
# ================================================================================ #
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    # commit = "0e990032f3c5a866e72615cf67e5ce22186dcb97",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

# ====================================================================================== #
# external dependencies
#
# Note that the library path is different when using WORKSPACE and MODULE.bazel.
# When importing the external library "liburing" using WORKSPACE, the library path is:
#   "bazel-<workspace-name>/external/liburing"
# With MODULE.bazel (Bazlmod), the path becomes:
#   "bazel-<workspace-name>/external/_main~_repo_rules~liburing"
# ====================================================================================== #
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# A generic content for all http_archive rules.
_ALL_CONTENT = """\
filegroup(
    name = "all",
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)
"""

http_archive(
    name = "arrow",
    build_file_content = _ALL_CONTENT,
    strip_prefix = "arrow-apache-arrow-18.0.0",
    urls = ["https://github.com/apache/arrow/archive/refs/tags/apache-arrow-18.0.0.tar.gz"],
    integrity = "sha256-nEc/LJkUxZq1cXYclJfPDlz9PqM193gszGEh9cuZrps=",
)

http_archive(
    name = "rocksdb",
    build_file_content = _ALL_CONTENT,
    strip_prefix = "rocksdb-9.7.4",
    urls = ["https://github.com/facebook/rocksdb/archive/refs/tags/v9.7.4.tar.gz"],
)

http_archive(
    name = "spdlog",
    build_file_content = _ALL_CONTENT,
    strip_prefix = "spdlog-1.15.0",
    urls = ["https://github.com/gabime/spdlog/archive/refs/tags/v1.15.0.tar.gz"],
    integrity = "sha256-mWJkjJtPGnu8dv2NkXJVW60Ycf2xT/T4Qu+HlJaCyqU=",
)

http_archive(
    name = "postgres",
    build_file_content = _ALL_CONTENT,
    strip_prefix = "postgres-REL_17_1",
    urls = ["https://github.com/postgres/postgres/archive/refs/tags/REL_17_1.tar.gz"],
)

# we use a forked version of libpg_query since the origin's "make install" doesn't work
# with bazel
http_archive(
    name = "libpg_query",
    build_file_content = _ALL_CONTENT,
    # strip_prefix = "libpg_query-17-6.0.0",
    # urls = ["https://github.com/pganalyze/libpg_query/archive/refs/tags/17-6.0.0.tar.gz"],
    strip_prefix = "libpg_query-xiaochen-17-6.0.0",
    urls = ["https://github.com/small-db/libpg_query/archive/refs/tags/xiaochen-17-6.0.0.tar.gz"],
    integrity = "sha256-6E6WccCYz2mLtA2gj5q8Vq+lMi4OOcmrB1Gc3M1HLQc=",
)

http_archive(
    name = "libpqxx",
    build_file_content = _ALL_CONTENT,
    strip_prefix = "libpqxx-7.10.0",
    urls = ["https://github.com/jtv/libpqxx/archive/refs/tags/7.10.0.tar.gz"],
)

# ====================================================================================== #
# modules from "Bazel Central Registry"
# ====================================================================================== #
# https://registry.bazel.build/modules/googletest
bazel_dep(name = "googletest", version = "1.15.2")

# https://registry.bazel.build/modules/rules_foreign_cc
bazel_dep(name = "rules_foreign_cc", version = "0.13.0")

# https://registry.bazel.build/modules/platforms
# Needed for custom toolchains.
bazel_dep(name = "platforms", version = "0.0.10")

# ====================================================================================== #
# custom toolchains
# ====================================================================================== #
register_toolchains(
    "//toolchain:xc_toolchain_clang20",
    "//toolchain:xc_toolchain_gcc13",
)